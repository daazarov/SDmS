@model SDmS.Mvc.Areas.Dashboard.Models.Pages.ClimatePageViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Dashboard/Views/Shared/_DashboardLayout.cshtml";
}

@if (Model.TempControlSensors.Count() > 0)
{
    <h4>Climate Control</h4>
    <div class="uk-grid uk-grid-medium uk-child-width-1-2@s uk-child-width-1-3@l uk-grid-match js-filter" data-uk-scrollspy="cls: uk-animation-slide-bottom-small; target: > div > .uk-card; delay: 200" data-uk-grid>

        @foreach (var item in Model.TempControlSensors)
        {
            <!-- climate control -->
            <div>
                <div class="uk-card uk-card-default uk-card-hover uk-card-small">
                    <div class="uk-card-header">
                        <div class="uk-grid uk-grid-small">
                            <div class="uk-width-auto"><h4>@item.Name</h4></div>
                            <div class="uk-text-left"><span class="uk-text-@(item.IsOnline ? "success" : "danger")">@(item.IsOnline ? "Online" : "Offline")</span></div>
                            <div class="uk-width-expand uk-text-right panel-icons">
                                <a id="js-modal-confirm" href="@Url.Action("DeleteDevice", "climate", new { area = "Dashboard", serial_number = item.SerialNumber}, null)" class="uk-icon-link" title="Delete" data-uk-tooltip data-uk-icon="icon: trash; ratio: 1.2"></a>
                                <a href="#" class="uk-icon-link" title="Configuration" data-uk-tooltip data-uk-icon="icon: cog; ratio: 1.2"></a>
                            </div>
                        </div>
                    </div>
                    <div class="uk-card-body @((!item.IsOnline) ? "uk-disabled" : "")">
                        <div class="uk-grid uk-grid-small">
                            <div class="uk-width-1-4" style="margin-top: 10px;">
                                <div class="uk-text-center">
                                    <img src="~/Content/img/dashboard/temperature.png">
                                </div>
                            </div>
                            <div class="uk-width-2-5">
                                <p>Temperature</p>
                                <p class="mb-0 mt-2 display-5">
                                    <span>@((item.IsOnline && item.TempC != -127) ? item.TempC.ToString() : "-")</span>
                                    <sup>°C</sup>
                                </p>
                                <p class="mb-0 mt-2 lead">
                                    <span>@((item.IsOnline && item.TempC != -127) ? item.TempF.ToString() : "-")</span>
                                    <sup>°F</sup>
                                </p>
                            </div>
                            <div class="uk-width-expand uk-text-center">
                                @using (Ajax.BeginForm("ChangeProperty", new { area = "Dashboard", serial_number = item.SerialNumber }, new AjaxOptions
                                {
                                    HttpMethod = "POST",
                                },
                    htmlAttributes: new { id = "TempControlSwitchForm_" + item.SerialNumber }))
                                {
                                    <input name="Type" type="hidden" value="2" />
                                    <label>
                                        @Html.CheckBox("IsControlEnabled", item.IsControlEnable,
                                          new
                                          {
                                              @class = "uk-checkbox",
                                              @oninput = String.Format("OnInputChange('#TempControlSwitchForm_{0}')", item.SerialNumber)
                                          })
                                        Desired
                                    </label>
                                }
                                <div class="vertical" style="margin-top: 15px;">
                                    @using (Ajax.BeginForm("ChangeProperty", new { area = "Dashboard", serial_number = item.SerialNumber }, new AjaxOptions
                                    {
                                        HttpMethod = "POST",
                                    },
htmlAttributes: new { id = "ChangeTepmForm_" + item.SerialNumber }))
                                    {
                                        <input name="Type" type="hidden" value="2" />
                                        <input name="DesiredTemperature" type="hidden" value="" onchange="OnInputChange('#ChangeTepmForm_@item.SerialNumber')" />
                                    }
                                    <div id="flat-slider-vertical-@item.SerialNumber"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /climate controle -->
        }
    </div>
    <br />
}

@if (Model.TempSensors.Count() > 0)
{
    <h4>Temperature Sensors</h4>
    <div class="uk-grid uk-grid-medium uk-child-width-1-2@s uk-child-width-1-3@m uk-child-width-1-4@l uk-child-width-1-5@xl uk-grid-match js-filter" data-uk-scrollspy="cls: uk-animation-slide-bottom-small; target: > div > .uk-card; delay: 200" data-uk-grid>

        @foreach (var item in Model.TempSensors)
        {
            <!-- termometr -->
            <div>
                <div class="uk-card uk-card-default uk-card-hover uk-card-small">
                    <div class="uk-card-header">
                        <div class="uk-grid uk-grid-small">
                            <div class="uk-width-auto"><h4>@item.Name</h4></div>
                            <div class="uk-text-left"><span class="uk-text-@(item.IsOnline ? "success" : "danger")">@(item.IsOnline ? "Online" : "Offline")</span></div>
                            <div class="uk-width-expand uk-text-right panel-icons">
                                <a id="js-modal-confirm" href="@Url.Action("DeleteDevice", "climate", new { area = "Dashboard", serial_number = item.SerialNumber}, null)" class="uk-icon-link" title="Delete" data-uk-tooltip data-uk-icon="icon: trash; ratio: 1.2"></a>
                                <a href="#" class="uk-icon-link" title="Configuration" data-uk-tooltip data-uk-icon="icon: cog; ratio: 1.2"></a>
                            </div>
                        </div>
                    </div>
                    <div class="uk-card-body">
                        <div class="uk-grid uk-grid-small">
                            <div class="uk-width-1-2" style="margin-top: 10px;">
                                <div class="uk-text-center">
                                    <img src="~/Content/img/dashboard/temperature.png">
                                </div>
                            </div>
                            <div class="uk-width-expand">
                                <p>Temperature</p>
                                <p class="mb-0 mt-2 display-5">
                                    <span>@((item.IsOnline && item.TempC != -127) ? item.TempC.ToString() : "-")</span>
                                    <sup>°C</sup>
                                </p>
                                <p class="mb-0 mt-2 lead">
                                    <span>@((item.IsOnline && item.TempC != -127) ? item.TempF.ToString() : "-")</span>
                                    <sup>°F</sup>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /termometr -->
        }

    </div>
}

<div class="md-fab-wrapper">
    <a class="md-fab md-fab-accent md-fab-wave-light waves-effect waves-button waves-light uk-toggle" uk-toggle href="#add-device-modal-sections">
        <i class="material-icons">+</i>
    </a>
</div>

<!--New device section-->
<div id="add-device-modal-sections" uk-modal>
    <div class="uk-modal-dialog">
        <button class="uk-modal-close-default" type="button" uk-close></button>
        <div class="uk-modal-header">
            <h2 class="uk-modal-title">Add new device</h2>
        </div>
        @using (Html.BeginForm("AddDevice", "Climate", new { area = "Dashboard" }, FormMethod.Post, new { @class = "uk-form-stacked" }))
        {
            <div class="uk-modal-body">
                <div class="uk-margin">
                    <label class="uk-form-label" for="form-stacked-text">Name</label>
                    <div class="uk-form-controls">
                        @Html.TextBox("Name", "", new { @class = "uk-input", @id = "form-stacked-text", @placeholder = "Device Name...", @required = "" })
                        @Html.ValidationMessageFor(model => model.DeviceAdd.Name)
                    </div>
                </div>

                <div class="uk-margin">
                    <label class="uk-form-label" for="form-stacked-text">Serial number</label>
                    <div class="uk-form-controls">
                        @Html.TextBox("SerialNumber", "", new { @class = "uk-input", @id = "form-stacked-text", @placeholder = "Serial Number...", @required = "" })
                        @Html.ValidationMessageFor(model => model.DeviceAdd.SerialNumber)
                    </div>
                </div>

                <div class="uk-margin">
                    <label class="uk-form-label" for="form-stacked-text">Device type</label>
                    <div class="uk-form-controls">
                        @Html.DropDownList("Type", Model.DeviceTypes as SelectList, "Select type", new { @class = "uk-select" })
                    </div>
                </div>
            </div>
            <div class="uk-modal-footer uk-text-right">
                <button class="uk-button uk-button-default uk-modal-close" type="button">Cancel</button>
                <button class="uk-button uk-button-primary" type="submit">Add</button>
            </div>
        }
    </div>
</div>
<!--/New device section-->

@section Scripts {
    <script>
        UIkit.util.on('#js-modal-confirm', 'click', function (e) {
            e.preventDefault();
            e.target.blur();

            var url = e["currentTarget"];

            UIkit.modal.confirm('Are you sure?').then(function () { OnConfirmDelete(url) }, function () { });

            function OnConfirmDelete(ulr) {

                $.ajax({
                    url: url,
                    type: 'DELETE',
                    dataType: 'json',
                    success: function (data) {
                        window.location.href = location.href;
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        UIkit.notification({ message: "<span uk-icon=\'icon: warning\'></span>&#8195" + "Error! Please, try again later", status: 'warning', timeout: 7000 });
                    }
                });
            };
        });
    </script>
    <script>
        $("div[id*='flat-slider-vertical']")
            .slider({
                max: 27,
                min: 19,
                range: "min",
                value: 23,
                orientation: "vertical"
            })
            .slider("pips", {
                first: "pip",
                last: "pip"
            })
            .slider("float")
            .on("slidechange", function (e, ui) {

                $("#ChangeTepmForm_JRB65GFBC87BD5423 > input").val(ui.value);
                $("#ChangeTepmForm_JRB65GFBC87BD5423 > input").trigger("change");

            });
    </script>
    <script>
        function OnInputChange(form_id) {
            $(form_id).submit();
        };
    </script>
}
