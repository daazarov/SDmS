@model SDmS.Mvc.Areas.Dashboard.Models.Pages.LightPageViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Dashboard/Views/Shared/_DashboardLayout.cshtml";
}

<div class="uk-grid uk-grid-medium uk-child-width-1-2@s uk-child-width-1-3@m uk-child-width-1-4@xl uk-grid-match js-filter" data-uk-scrollspy="cls: uk-animation-slide-bottom-small; target: > div > .uk-card; delay: 200" data-uk-grid>

    @foreach (var item in Model.Leds)
    {
        <!-- led -->
        <div>
            <div class="uk-card uk-card-default uk-card-hover uk-card-small">
                <div class="uk-card-header">
                    <div class="uk-grid uk-grid-small">
                        <div class="uk-width-auto"><h4>@item.Name</h4></div>
                        <div class="uk-width-expand uk-text-right panel-icons">
                            <a id="js-modal-confirm" href="@Url.Action("DeleteLed", "lights", new { area = "Dashboard", serial_number = @item.SerialNumber}, null)" class="uk-icon-link" title="Delete" data-uk-tooltip data-uk-icon="icon: trash; ratio: 1.2"></a>
                            <a href="@Url.Action("Configure", "lights", new { area= "Dashboard", serial_number = @item.SerialNumber}, null)" class="uk-icon-link" title="Configuration" data-uk-tooltip data-uk-icon="icon: cog; ratio: 1.2"></a>
                            @using (Ajax.BeginForm("ChangeProperty", new { area = "Dashboard", serial_number = item.SerialNumber }, new AjaxOptions
                            {
                                HttpMethod = "POST",
                            },
                            htmlAttributes: new { id = "LedSwitchForm_" + item.SerialNumber, @style = "float: left" }))
                            {
                                <input name="Type" type="hidden" value="3"/>
                                @Html.CheckBox("isEnable", item.IsEnable,
                                    htmlAttributes: new
                                    {
                                        @data_uk_toggle = String.Format("target: .toogle-state-{0}; animation: uk-animation-fade", item.SerialNumber),
                                        @class = String.Format("sd-toogle {0}", ((!item.IsOnline) ? "uk-disabled" : "")),
                                        @style = "vertical-align: middle;",
                                        @oninput = String.Format("OnInputChange('#LedSwitchForm_{0}')", item.SerialNumber)
                                    })
                            }
                        </div>
                    </div>
                </div>
                <div class="uk-card-body @((!item.IsOnline) ? "uk-disabled" : "")">
                    <div class="uk-grid uk-grid-small">
                        <div class="uk-width-1-5" style="margin-top: 10px;">
                            <div class="toogle-state-@item.SerialNumber uk-text-center" @(!(item.IsEnable) ? "hidden=\"true\"" : "")>
                                <img src="~/Content/img/dashboard/light-on.svg">
                            </div>
                            <div class="toogle-state-@item.SerialNumber" @((item.IsEnable) ? "hidden=\"true\"" : "")>
                                <img src="~/Content/img/dashboard/light-off.svg">
                            </div>
                        </div>
                        <div class="uk-width-expand">
                            <table class="uk-table">
                                <tbody>
                                    <tr>
                                        <td><p>Connection</p></td>
                                        <td><span class="uk-text-@(item.IsOnline ? "success" : "danger")">@(item.IsOnline ? "Ok" : "Offline")</span></td>
                                    </tr>
                                    <tr>
                                        <td><p>Power Consumption</p></td>
                                        <td><p class="uk-text-secondary">@(item.Power)W</p></td>
                                    </tr>
                                    <tr>
                                        <td><p>Voltage range</p></td>
                                        <td><p class="uk-text-secondary">@item.VoltageRange</p></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="uk-card-footer @((!item.IsOnline) ? "uk-disabled" : "")">
                    <div class="uk-grid uk-grid-small">
                        <div class="uk-width-auto"><span>Intensity</span></div>
                        <div class="uk-width-expand uk-text-right panel-icons">
                            <span class="uk-text-bolder" id="dimVal_@item.SerialNumber">@item.Intensity</span><span class="uk-text-bolder">%</span>
                        </div>
                    </div>
                    @using (Ajax.BeginForm("ChangeProperty", new { area = "Dashboard", serial_number = item.SerialNumber }, new AjaxOptions
                    {
                        HttpMethod = "POST",
                    },
                htmlAttributes: new { id = "LedIntensityForm_" + item.SerialNumber }))
                    {
                        <input name="Type" type="hidden" value="3" />
                        <input id="@item.SerialNumber" name="Intensity" type="range" class="sd-slider" value="@item.Intensity" min="10" max="100" step="5" oninput="UpdateDim(this);@(String.Format("OnInputChange('#LedIntensityForm_{0}')", item.SerialNumber))">
                    }
                </div>
            </div>
        </div>
    <!-- /led -->
    }
</div>

<div class="md-fab-wrapper">
    <a class="md-fab md-fab-accent md-fab-wave-light waves-effect waves-button waves-light uk-toggle" uk-toggle href="#add-device-modal-sections">
        <i class="material-icons">+</i>
    </a>
</div>

<!--New device section-->
<div id="add-device-modal-sections" uk-modal>
    <div class="uk-modal-dialog">
        <button class="uk-modal-close-default" type="button" uk-close></button>
        <div class="uk-modal-header">
            <h2 class="uk-modal-title">Add new device</h2>
        </div>
        @using (Html.BeginForm("AddDevice", "Lights", new { area = "Dashboard" }, FormMethod.Post, new { @class = "uk-form-stacked" }))
        {
            <input name="Type" type="hidden" value="3" />
            <div class="uk-modal-body">
                <div class="uk-margin">
                    <label class="uk-form-label" for="form-stacked-text">Name</label>
                    <div class="uk-form-controls">
                        @Html.TextBox("Name", "", new { @class = "uk-input", @id = "form-stacked-text", @placeholder = "Device Name...", @required = "" })
                        @Html.ValidationMessageFor(model => model.LedAdd.Name)
                    </div>
                </div>

                <div class="uk-margin">
                    <label class="uk-form-label" for="form-stacked-text">Serial number</label>
                    <div class="uk-form-controls">
                        @Html.TextBox("SerialNumber", "", new { @class = "uk-input", @id = "form-stacked-text", @placeholder = "Serial Number...", @required = "" })
                        @Html.ValidationMessageFor(model => model.LedAdd.SerialNumber)
                    </div>
                </div>

            </div>
            <div class="uk-modal-footer uk-text-right">
                <button class="uk-button uk-button-default uk-modal-close" type="button">Cancel</button>
                <button class="uk-button uk-button-primary" type="submit">Add</button>
            </div>
        }
    </div>
</div>
<!--/New device section-->

@section Scripts{

<script>
    function UpdateDim(selectElem) {
        var rangePercent = selectElem.value;
        var id = selectElem.id;

        $('#dimVal_' + id).text(rangePercent);
        $(selectElem).css('filter', 'hue-rotate(-' + rangePercent + 'deg)');
    };
</script>
<script>
    UIkit.util.on('#js-modal-confirm', 'click', function (e) {
    e.preventDefault();
    e.target.blur();

    var url = e["currentTarget"];

    UIkit.modal.confirm('Are you sure?').then(function () { OnConfirmDelete(url)}, function () { });

    function OnConfirmDelete(ulr) {
        $.ajax({
            url: url,
            type: 'DELETE',
            dataType: 'json',
            success: function (data) {
                window.location.href = location.href;
            },
            error: function (xhr, textStatus, errorThrown) {
                UIkit.notification({ message: "<span uk-icon=\'icon: warning\'></span>&#8195" + "Error! Please, try again later", status: 'warning', timeout: 7000 });
            }
        });
        };
    });

    function OnInputChange(form_id) {
        $(form_id).submit();
    };

</script>
}

