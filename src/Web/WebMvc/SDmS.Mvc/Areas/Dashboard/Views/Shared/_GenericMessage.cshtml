@using SDmS.Mvc.Models
@using SDmS.Mvc.Models.Enums
@using SDmS.Mvc.Domain.Core.Constants

@{
    var genericMessage = new List<GenericMessageViewModel>();
    if (TempData[AppConstants.MessageViewBagName] != null)
    {
        genericMessage = (List<GenericMessageViewModel>)TempData[AppConstants.MessageViewBagName];
    }
    else if (ViewBag.Message != null)
    {
        genericMessage = (List<GenericMessageViewModel>)ViewBag.Message;
    }
}

@foreach (var message in genericMessage)
{
    if (!string.IsNullOrEmpty(message.Message))
    {
        switch (message.Type)
        {
            case MessageTypes.danger:
                <script>UIkit.notification({ message: "<span uk-icon=\'icon: ban\'></span>&#8195" + "@message.Message", status: 'danger', timeout: 7000 })</script>
                <script>danger_message(@message);</script>
                break;
            case MessageTypes.info:
                <script> UIkit.notification({ message: "<span uk-icon=\'icon: info\'></span>&#8195" + "@message.Message", status: 'primary', timeout: 7000 })</script>
                break;
            case MessageTypes.success:
                <script>UIkit.notification({message: "<span uk-icon=\'icon: check\'></span> &#8195" + "@message.Message", status: 'success', timeout: 7000 });</script>
                break;
            case MessageTypes.warning:
                <script>UIkit.notification({ message: "<span uk-icon=\'icon: warning\'></span>&#8195" + "@message.Message", status: 'warning', timeout: 7000 });</script>
                break;
        }
    }
}
